/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Web3HuntContentManager,
  Web3HuntContentManagerInterface,
} from "../Web3HuntContentManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "StateChange",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data_",
        type: "bytes[]",
      },
    ],
    name: "stateChange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061023c806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633ec5c90914610030575b600080fd5b61004361003e3660046100c4565b610045565b005b60005b818110156100bf577f6d6116a1c6efe012563afc71498d1d3bba28c1917c6ab0e3f24906942c22b3da3384848481811061008457610084610139565b9050602002810190610096919061014f565b6040516100a59392919061019d565b60405180910390a1806100b7816101dd565b915050610048565b505050565b600080602083850312156100d757600080fd5b823567ffffffffffffffff808211156100ef57600080fd5b818501915085601f83011261010357600080fd5b81358181111561011257600080fd5b8660208260051b850101111561012757600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261016657600080fd5b83018035915067ffffffffffffffff82111561018157600080fd5b60200191503681900382131561019657600080fd5b9250929050565b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f1916010192915050565b60006000198214156101ff57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220f0efe66d2006b03752a0701af4b79928d6c5dbbd1560a3645dd09b5a98123d8164736f6c634300080a0033";

type Web3HuntContentManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Web3HuntContentManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Web3HuntContentManager__factory extends ContractFactory {
  constructor(...args: Web3HuntContentManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Web3HuntContentManager> {
    return super.deploy(overrides || {}) as Promise<Web3HuntContentManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Web3HuntContentManager {
    return super.attach(address) as Web3HuntContentManager;
  }
  connect(signer: Signer): Web3HuntContentManager__factory {
    return super.connect(signer) as Web3HuntContentManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Web3HuntContentManagerInterface {
    return new utils.Interface(_abi) as Web3HuntContentManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Web3HuntContentManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as Web3HuntContentManager;
  }
}
